kind: pipeline
type: exec
name: testing

platform:
  os: linux
  arch: amd64

clone:
  disable: true

concurrency:
  limit: 1

node:
  webapp: testing

steps:
  - name: custom-clone
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - cd $WDIR
      - git reset --hard
      - git pull
      - git checkout $DRONE_SOURCE_BRANCH
      - git pull

  - name: full-clean-up
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - $WDIR/ci-cd/docker/full-clean-up.sh

  - name: setup-database
    environment:
      WDIR:
        from_secret: repo-dir
      DPASSWORD:
        from_secret: database_password
    commands:
      - cd $WDIR
      - docker run --name database -v "$WDIR/ci-cd/init-db.sh":/docker-entrypoint-initdb.d/init-db.sh -e POSTGRES_PASSWORD=$DPASSWORD -e POSTGRES_DB=barbershop -p 5432:5432 --net barber-network-dev -d postgres
      - sleep 5

  - name: test-backend
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - cd $WDIR
      - DOCKER_BUILDKIT=0 docker build --network barber-network-dev -t brothersbarber/barbershop:backend-test --target test -f "$WDIR/ci-cd/docker/backend-dockerfile" .

  - name: build-backend
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - cd $WDIR
      - docker build -t brothersbarber/barbershop:backend --target production -f "$WDIR/ci-cd/docker/backend-dockerfile" .

  - name: build-frontend
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - cd $WDIR
      - docker build -t brothersbarber/barbershop:frontend -f "$WDIR/ci-cd/docker/frontend-dockerfile" .

  - name: frontend-testing-setup
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - cd $WDIR
      - docker run -p 5001:5001 -e "Backend_URL=http://backend:5001/" -e "Frontend_URL=http://frontend:8080" --net barber-network-dev --name backend -d brothersbarber/barbershop:backend-testing
      - docker run --expose=8080 -e "VUE_APP_API_URL=http://backend:5001/" --net barber-network-dev --name frontend -d brothersbarber/barbershop:frontend-testing

  - name: test-frontend
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
      - cd $WDIR
      - docker run --net barber-network-dev -v $PWD/barber-website/frontend:/e2e -w /e2e cypress/included:12.4.0

  - name: scan-metrics
    environment:
      WDIR:
        from_secret: repo-dir
      SUSERNAME:
        from_secret: sonar-username
      SPASSWORD:
        from_secret: sonar-password
    commands:
      - cd $WDIR
      - /home/sonarqube/sonar-scanner/sonar-scanner/bin/sonar-scanner -Dsonar.login=$SUSERNAME -Dsonar.password=$SPASSWORD
    when:
      event:
        exclude:
          - pull_request
      branch:
        - main

  - name: post-testing-clean-up
    environment:
      WDIR:
        from_secret: repo-dir
    commands:
    - $WDIR/ci-cd/docker/testing-clean-up.sh

  - name: dockerhub-login
    environment:
      DUSERNAME:
        from_secret: dockerhub_user
      DPASSWORD:
        from_secret: dockerhub_password
    commands:
      - docker login -u $DUSERNAME -p $DPASSWORD
    when:
      event:
        exclude:
          - pull_request
      branch:
        - main

  - name: dockerhub-push-backend
    commands:
      - docker push brothersbarber/barbershop:backend
    when:
      event:
        exclude:
          - pull_request
      branch:
        - main

  - name: dockerhub-push-frontend
    commands:
      - docker push brothersbarber/barbershop:frontend
    when:
      event:
        exclude:
          - pull_request
      branch:
        - main

  - name: dockerhub-logout
    commands:
      - docker logout
    when:
      event:
        exclude:
          - pull_request
      branch:
        - main

---
kind: pipeline
type: exec
name: deployment

platform:
  os: linux
  arch: amd64

clone:
  disable: true

concurrency:
  limit: 1

node:
  webapp: deployment

depends_on:
  - testing

trigger:
  event:
    exclude:
      - pull_request
  branch:
    - main

steps:
  - name: clean-up
    failure: ignore
    commands:
      - docker rm -f backend
      - docker rm -f frontend
      - docker rmi $(docker images --all -q)

  - name: dockerhub-login
    environment:
      DUSERNAME:
        from_secret: dockerhub_user
      DPASSWORD:
        from_secret: dockerhub_password
    commands:
      - docker login -u $DUSERNAME -p $DPASSWORD

  - name: pull-backend
    commands:
      - docker pull brothersbarber/barbershop:backend

  - name: pull-frontend
    commands:
      - docker pull brothersbarber/barbershop:frontend

  - name: dockerhub-logout
    commands:
      - docker logout

  - name: deploy-backend
    commands:
      - docker run -p 5001:5001 -e "database_password=POSTGRES" -e "Backend_URL=http://104.225.142.153:5001/" -e "Frontend_URL=http://brothers-barbershop.ca/" --net barber-network --name backend -d brothersbarber/barbershop:backend

  - name: deploy-frontend
    commands:
      - docker run -p 80:8080 -e "VUE_APP_API_URL=http://104.225.142.153:5001/" --net barber-network --name frontend -d brothersbarber/barbershop:frontend
